 <style>
    canvas{
        display:block;
        margin:auto;
    }
 </style>
<script>
    var config = {
        type: Phaser.AUTO,
        width: 800,
        height: 600,
        scene: {
            preload: preload,
            create: create,
            update: update
        },
        physics: { //what kind of physics you want in da game
            default: "arcade",
            arcade: {
                gravity: {y: 300},
                debug: false
            }
        }
    };

    var game = new Phaser.Game(config);

    function preload (){
        this.load.image("sky","/assets/phaser_test/sky.png")
        this.load.image("platform","/assets/phaser_test/platform.png")
        this.load.image("star","/assets/phaser_test/star.png")
        this.load.image("bomb","/assets/phaser_test/bomb.png")

        this.load.spritesheet("dude", "/assets/phaser_test/dude.png",{frameWidth: 32, frameHeight: 48})
    }
    var platforms, player, score=0, score_text
    function create (){
        //sky
        this.add.image(0, 0, 'sky').setOrigin(0, 0)
        //platforms
        platforms = this.physics.add.staticGroup()
        platforms.create(400, 568, "platform").setScale(2).refreshBody();
        platforms.create(600,400,"platform")
        platforms.create(50,250,"platform")
        platforms.create(750,220,"platform")
        //stars
        stars = this.physics.add.group({
            key: 'star',
            repeat: 11,
            setXY: { x: 12, y: 0, stepX: 70 }
        });
        /*stars.children.iterate(function (child) {

            child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));

        });*/
        //bombs
        bombs = this.physics.add.group()
        this.physics.add.collider(bombs, platforms)
        //player
        player = this.physics.add.sprite(100,450,"dude")
        player.setBounce(0)
        player.setCollideWorldBounds(true)
        player.body.setGravityY(300)
        this.anims.create({
            key:"left",
            frames: this.anims.generateFrameNumbers("dude", {start:0, end:3}),
            frameRate: 10,
            repeat: -1 //tell anim to loop
        })
        this.anims.create({
            key:"turn",
            frames: [{key:"dude", frame:4}],
            frameRate:20
        })
        this.anims.create({
            key:"right",
            frames: this.anims.generateFrameNumbers("dude", {start:5, end:8}),
            frameRate: 10,
            repeat: -1
        })

        //Collider
        this.physics.add.collider(player, platforms) //accept groups
        this.physics.add.collider(stars, platforms)
        this.physics.add.overlap( player, stars, collect_star, null, this)
        this.physics.add.overlap(player, bombs, hit_bomb, null, this)

        //controls
        cursors = this.input.keyboard.createCursorKeys()
        
        //text
        score_text =  this.add.text(16,16, "score: 0", {fontSize:"32px", fill:"#000"})
    }

    function update (){
        if (cursors.left.isDown){
            player.setVelocityX(-160)

            player.anims.play('left', true)
        }
        else if (cursors.right.isDown){
            player.setVelocityX(160)

            player.anims.play('right', true)
        }
        else{
            player.setVelocityX(0)

            player.anims.play('turn')
        }

        if (cursors.up.isDown && player.body.touching.down){
            player.setVelocityY(-500)
        }
    }

    function collect_star (player, star){
        star.disableBody(true, true) //set inactive and invisible
        score += 10;
        score_text.setText('Score: ' + score);

        if (stars.countActive(true)==0){
            stars.children.iterate(function(child){
                child.enableBody(true, child.x, 0, true, true)
            })

            var x = (player.x < 400) ? Phaser.Math.Between(400,800) : Phaser.Math.Between(0,400)

            var bomb = bombs.create(x, 16, "bomb")
            bomb.setBounce(1)
            bomb.setCollideWorldBounds(true)
            bomb.setVelocity(Phaser.Math.between(-200, 200), 20)
        }
    }
    function hit_bomb(player, bomb){
        this.physics.pause()
        player.setInt(0*ff0000)
        player.anims.play("turn")
        gameOver=true

    }
</script>
